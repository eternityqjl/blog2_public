<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jialong&#39;s Blog</title>
    <link>http://eternityqjl.top/</link>
    <description>Recent content on Jialong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>2019-2021 By Jialong</copyright>
    <lastBuildDate>Sun, 04 Jul 2021 16:09:50 +0000</lastBuildDate>
    
        <atom:link href="http://eternityqjl.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>C语言指针</title>
        <link>http://eternityqjl.top/posts/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</link>
        <pubDate>Thu, 19 Sep 2019 13:10:25 +0000</pubDate>
        
        <guid>http://eternityqjl.top/posts/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/</guid>
        <description>Jialong&#39;s Blog http://eternityqjl.top/posts/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/ -&lt;h2 id=&#34;一指针的一些概念&#34;&gt;一、指针的一些概念&lt;/h2&gt;
&lt;h3 id=&#34;1-指针的类型&#34;&gt;1. 指针的类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;把指针声明语句中的指针名字去掉，剩下的就是&lt;strong&gt;指针本身&lt;/strong&gt;的类型&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-指针所指向的类型&#34;&gt;2. 指针所指向的类型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;把指针声明语句中的指针名字和名字前的指针声明符号*去掉，剩下的就是&lt;strong&gt;指针指向的类型&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-指针的值指针所指向的内存区或地址&#34;&gt;3. 指针的值——指针所指向的内存区或地址&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;指针的值是指针本身&lt;strong&gt;存储的数值&lt;/strong&gt;，该值被编译器当作一个地址（在32位程序中，所有类型的指针的值都是一个32位的整数，因为32位程序的内存地址都是32位长。）&lt;/li&gt;
&lt;li&gt;指针所指的&lt;strong&gt;内存区&lt;/strong&gt;就是从指针的值所代表的内存地址开始，长度为&lt;code&gt;sizeof(指针指向的类型)&lt;/code&gt;的一篇内存区。&lt;/li&gt;
&lt;li&gt;我们说&lt;strong&gt;一个指针的值是XX&lt;/strong&gt;，就相当于说&lt;strong&gt;该指针指向了以XX为首地址的一片内存区&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;同理，我们说&lt;strong&gt;一个指针指向了某个内存区&lt;/strong&gt;，相当于说&lt;strong&gt;该指针的值是该内存区域的首地址&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-指针本身所占据的内存区&#34;&gt;4. 指针本身所占据的内存区&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;用&lt;code&gt;sizeof(指针的类型)&lt;/code&gt;测试一下就知道了&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;二指针的算术运算&#34;&gt;二、指针的算术运算&lt;/h2&gt;
&lt;p&gt;**0.**指针可以加上或者减去一个整数，这种运算的意义并不是平常的数值的加减。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;example 1&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;char&lt;/span&gt; a[&lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;] &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;};
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;)a;
ptr&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;++&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指针ptr的类型为int*，它指向的类型为int，被初始化为指向整型变量a。&lt;/p&gt;
&lt;p&gt;在第三句中，指针ptr被加上了1，编译器是这样进行处理的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把指针ptr的值加上&lt;code&gt;sizeof(int)&lt;/code&gt;，在32位程序中是被加上了4，因为32位程序中&lt;code&gt;int&lt;/code&gt;占4字节。&lt;/p&gt;
&lt;p&gt;由于地址是用字节作为单位，所以ptr指向的地址由原来的a的地址向高的地方增加了4个地址。&lt;/p&gt;
&lt;p&gt;char类型的长度是一个字节，所以原来的ptr是指向数组a从第0个单元开始的4个字节，现在指向了从第4个单元开始的4个字节&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;example 2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;1.&lt;strong&gt;可以使用&lt;/strong&gt;一个循环&lt;/strong&gt;和&lt;strong&gt;一个指针&lt;/strong&gt;遍历一个数组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; array[&lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;] &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;};
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; array;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; (i &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;; i&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;++&lt;/span&gt;)
{
    (&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;ptr)&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;++&lt;/span&gt;;
    ptr&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;++&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该例子中将整形数组中各个单元的值都加1。同时每次循环都将指针加1个单元，所以每次循环都能访问数组的下一个单元。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;example 4&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;char&lt;/span&gt; a[&lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;] &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;You_are_a_girl&amp;#34;&lt;/span&gt;;
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;) a;
ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;该例子中，指针ptr被加上了5个单元，编译器这样处理：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;将char的值加上&lt;code&gt;sizeof(int) * 5&lt;/code&gt;,在32位程序中即乘了4*5=20。&lt;/p&gt;
&lt;p&gt;指针的值代表了该指针以这个值为地址指向了某个内存区，所以指针ptr所指向的地址向高地址的方向移动了20个字节&lt;/p&gt;
&lt;p&gt;然而ptr加上5(即地址增加20个字节后)已经指向了数组a的合法范围之外，虽然应用时会出现问题，但在语法上没有问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;**2.**总结&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个指针ptrold加或减一个整数n后，结果是一个新的指针ptrnew，两个指针的类型相同，指向的类型也相同。&lt;/p&gt;
&lt;p&gt;ptrnew的值比ptrold的值增加或者减少了&lt;code&gt;n * sizeof(int)&lt;/code&gt;个字节，即ptrnew指向的内存区比ptrold指向的内存区向高或低地址的方向移动了&lt;code&gt;n * sizeof(int)&lt;/code&gt;个字节。&lt;/p&gt;
&lt;p&gt;指针进行加减：两个指针不能进行加法操作，这是非法操作，结果毫无意义。两个类型相同的指针可以进行减法运算，一般在数组上应用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;三运算符和&#34;&gt;三、运算符&amp;amp;和*&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;0.&lt;/strong&gt; &amp;amp;是取地址运算符，*是间接运算符。&lt;/p&gt;
&lt;p&gt;&amp;amp;a 运算的结果是一个指针，指针的类型是 *a，指针指向的类型是a的类型，指针指向的地址是a的地址。&lt;/p&gt;
&lt;p&gt;*p的类型是p指向的类型，所占用的地址是p指向的地址。&lt;/p&gt;
&lt;h2 id=&#34;四指针表达式&#34;&gt;四、指针表达式&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;0.&lt;/strong&gt; 一个表达式的结果如果叫指针，那么这个表达式就叫指针表达式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; a, b;
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; array[&lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;];
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;pa;
pa &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;a;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;// &amp;amp;a是指针表达式
&lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;**&lt;/span&gt;ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;pa;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;ptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;b;
pa &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; array;
pa&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;++&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; 指针表达式的结果是一个指针，所以也具有指针的4个要素：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;指针的类型&lt;/p&gt;
&lt;p&gt;指针指向的类型&lt;/p&gt;
&lt;p&gt;指针指向的内存区&lt;/p&gt;
&lt;p&gt;指针自身占据的内存&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; 一个指针表达式的结果指针已经具有了自身占据的内存的时候，这个指针表达式就是一个左值，否则就不是一个左值。&lt;/p&gt;
&lt;h2 id=&#34;五指针和数组的关系&#34;&gt;五、指针和数组的关系&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;0.&lt;/strong&gt; 数组的数组名可以看作是一个指针&lt;/p&gt;
&lt;p&gt;example&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; array[&lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;] &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;8&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;9&lt;/span&gt;}, value;
value &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; array[&lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;]; &lt;span style=&#34;color:#998;font-style:italic&#34;&gt;//or: value = *array;
&lt;/span&gt;&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;&lt;/span&gt;value &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; array[&lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;]; &lt;span style=&#34;color:#998;font-style:italic&#34;&gt;//or: value = *(array + 3);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;声明一个数组TYPE array[n]，则这个数组名有两重含义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代表整个数组，类型是TYPE[n]。&lt;/p&gt;
&lt;p&gt;是一个常量指针，类型是TYPE*，该指针指向的类型是TYPE，该指针的内存区就是数组的第0号单元，且该指针自己占有单独的内存区，且该指针的值不能修改，array++是错误的写法，这不代表array[1]。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;六指针和结构类型的关系&#34;&gt;六、指针和结构类型的关系&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;结构类型还未学习，之后补充&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;七指针和函数的关系&#34;&gt;七、指针和函数的关系&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;0.&lt;/strong&gt; 可以把一个指针声明成一个指向函数的指针。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;example&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#900;font-weight:bold&#34;&gt;fun1&lt;/span&gt; (&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt;);
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; (&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;pfun1)(&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;char&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;, &lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt;);
pfun1 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; fun1;
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; a &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;pfun1)(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#34;abcdefg&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#099&#34;&gt;7&lt;/span&gt;);&lt;span style=&#34;color:#998;font-style:italic&#34;&gt;//通过函数指针调用函数
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以把指针作为函数的形参。在函数表达式中，可以用指针表达式来作为实参。&lt;/p&gt;
&lt;h2 id=&#34;八指针类型转换&#34;&gt;八、指针类型转换&lt;/h2&gt;
&lt;p&gt;初始化一个指针或者给一个指针赋值时，赋值号左边时一个指针，右边是一个指针表达式。绝大多数情况下，指针的类型和指针表达式的类型是一样的，指针所指向的类型和表达式所指向的类型是一样的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;float&lt;/span&gt; f &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;12.3&lt;/span&gt;;
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;float&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;fptr &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;f;
&lt;span style=&#34;color:#458;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;p;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果我们想让指针p指向实数f，我们应该怎样操作？&lt;/p&gt;
&lt;p&gt;是“ p = &amp;amp;f; ”吗？&lt;/p&gt;
&lt;p&gt;不对，因为左右两侧的指针和指针所指向的类型不同。所以直接赋值不行。&lt;/p&gt;
&lt;p&gt;为了实现这个目的，需要使用强制类型转换：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;p = (int*) &amp;amp;f;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果一个指针p，需要把它指向的类型改为&amp;quot;TYPE&amp;quot;，语法格式为：&lt;code&gt;(TYPE*)p;&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这样的类型转换得到一个新指针，类型为TYPE*，指向的地址就是原指针指向的地址。原来p的一切属性都没有被修改。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;九指针的安全问题&#34;&gt;九、指针的安全问题&lt;/h2&gt;
- http://eternityqjl.top/posts/c%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88/ - 2019-2021 By Jialong</description>
        </item>
    
    
  </channel>
</rss> 