<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>大小端 on Jialong&#39;s Blog</title>
    <link>https://eternityqjl.top/tags/%E5%A4%A7%E5%B0%8F%E7%AB%AF/</link>
    <description>Recent content in 大小端 on Jialong&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2019-2021 By Jialong</copyright>
    <lastBuildDate>Wed, 22 Dec 2021 15:49:36 +0800</lastBuildDate><atom:link href="https://eternityqjl.top/tags/%E5%A4%A7%E5%B0%8F%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>测试机器大小端的方法</title>
      <link>https://eternityqjl.top/posts/%E6%B5%8B%E8%AF%95%E6%9C%BA%E5%99%A8%E5%A4%A7%E5%B0%8F%E7%AB%AF%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Wed, 22 Dec 2021 15:49:36 +0800</pubDate>
      
      <guid>https://eternityqjl.top/posts/%E6%B5%8B%E8%AF%95%E6%9C%BA%E5%99%A8%E5%A4%A7%E5%B0%8F%E7%AB%AF%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>小端法：低位字节存放在低地址，高位字节存放在高地址 大端法：低位字节存放在高地址，高位字节存放在低地址  判断电脑大小端模式的方法：
方法一  C语言中的char和int：
在C语言中并没有char类型的常量，其实是用int类型表示char。举个例子：
char ch = &amp;#39;a&amp;#39;; //分别输出ch的字符和对应的ascii码。即打印出的是字符或整数 printf(&amp;#34;%c, %d&amp;#34;, ch, ch); 输出结果为：a, 97
 将int 48存起来，然后取得其地址，再将这个地址转为char* 这时候，如果是小端存储，那么char*指针就指向48；48对应的ASCII码为字符‘0’；
void judge1() { int i = 48; int* p = &amp;amp;i; char c = 0; c = *((char*)p); if (c == &amp;#39;0&amp;#39;) cout &amp;lt;&amp;lt; &amp;#34;小端&amp;#34; &amp;lt;&amp;lt; endl; else cout &amp;lt;&amp;lt; &amp;#34;大端&amp;#34; &amp;lt;&amp;lt; endl; } 方法二 定义变量int i=1；将 i 的地址拿到，强转成char*型，这时候就取到了 i 的低地址，这时候如果是1就是小端存储，如果是0就是大端存储。
void judge2() { int i = 1; char c = (*(char*)&amp;amp;i); if (c) cout &amp;lt;&amp;lt; &amp;#34;小端&amp;#34; &amp;lt;&amp;lt; endl; else cout &amp;lt;&amp;lt; &amp;#34;大端&amp;#34; &amp;lt;&amp;lt; endl; } 方法三  联合体union是一种特殊数据类型，允许在相同的内存位置存储不同的数据类型。可以定义一个带有多成员的共同体，但任何时候只能有一个成员带有值。</description>
    </item>
    
  </channel>
</rss>
